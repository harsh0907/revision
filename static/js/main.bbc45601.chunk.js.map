{"version":3,"sources":["components/SelectRange.js","components/DashBoard.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SelectRange","props","state","min","max","disable","check","value","this","setState","submit","className","type","style","width","onChange","e","onMinChange","target","onMaxChange","onCheckChange","checked","disabled","onClick","onSubmit","hidden","color","Component","DashBoard","wrong","str","input1","input2","str1","str2","selectarticle","no","chapter","input3","toString","correct","used","items","data","item","index","times","onNext","totalno","changeState","ind","Math","floor","random","temp","switch","axios","get","then","res","yu","filter","split","show","length","toUpperCase","changeSwitch","article","onInput3Change","onInput1Change","onInput2Change","Home","mi","ma","che","change","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbc45601.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass SelectRange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            min:this.props.min,\r\n            max:this.props.max,\r\n            disable:false,\r\n            check:false\r\n        };\r\n    }\r\n    \r\n    onMinChange(value){\r\n        this.setState({min:value, disable:false})\r\n    }\r\n\r\n    onCheckChange(value){\r\n        this.setState({check:value, disable:false})\r\n    }\r\n    \r\n\r\n    onMaxChange(value){\r\n        this.setState({max:value, disable:false}) \r\n    }\r\n\r\n    onSubmit(){\r\n        if(this.state.max > 395 || this.state.min < 1 || this.state.max<this.state.min)\r\n          this.setState({disable:true})\r\n        else \r\n          this.props.submit(this.state.min, this.state.max, this.state.check?0:1) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"flex flex-column mt-5 pt-5\">\r\n            <div>\r\n                <h3 className=\"mb-4\">SelectRange</h3>  \r\n                <div>\r\n                    Min: <input \r\n                           type='Number' value={this.state.min}\r\n                           className=\"mr-3\" min='0' max='395'\r\n                           style={{width: 70}}\r\n                           onChange={e => this.onMinChange(e.target.value)}\r\n                        />\r\n                    Max: <input \r\n                           className=\"mr-2\"\r\n                           type='Number' \r\n                           value={this.state.max} min='0' max='395'\r\n                           style={{width: 70}} \r\n                           onChange={e => this.onMaxChange(e.target.value)}\r\n                        />\r\n                    Repeat:\r\n                    <input\r\n                        className=\"ml-2\"\r\n                        type=\"checkbox\"\r\n                        value={this.state.value}\r\n                        onChange={e => this.onCheckChange(e.target.checked)}\r\n                     />\r\n                </div>          \r\n            <button disabled={this.state.disable} onClick={e => this.onSubmit()} className=\"btn btn-primary mt-4\">SelectRange</button>\r\n            <p className=\"mt-2\" hidden={!this.state.disable} style={{color : 'red'}}>Enter Correct Value</p>    \r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectRange;","import React, { Component } from 'react';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\n\r\nclass DashBoard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            min:this.props.min,\r\n            max:this.props.max,\r\n            input1:\"\",\r\n            input2:\"\",\r\n            input3:0,\r\n            correct:false,\r\n            wrong:false,\r\n            data:[],\r\n            totalno:0,\r\n            used:0,\r\n            selectarticle:{},\r\n            switch:false,\r\n            index:0\r\n            \r\n        };\r\n        // this.state.data = data.filter(item => \r\n        //      (+item.no.split(\" \")[0]) >= this.state.min && (+item.no.split(\" \")[0])<= this.state.max && item.show )\r\n        // this.state.totalno = this.state.data.length \r\n     }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://gist.githubusercontent.com/harsh0907/191b6ba5758ce19576b9fb3f96cb3b01/raw/bd00a1f77bebfc0a8ba224e0b3b53235d7500878/article.json')\r\n        .then(res => {\r\n            let yu = res.data.filter(item => \r\n                (+item.no.split(\" \")[0]) >= this.state.min && (+item.no.split(\" \")[0])<= this.state.max && item.show )\r\n           this.setState({totalno:yu.length, data:yu})\r\n           this.onNext()\r\n        })\r\n        \r\n    }\r\n\r\n    onInput1Change(value){ \r\n          this.setState({input1:value})\r\n    }\r\n    \r\n    onInput2Change(value){ \r\n          this.setState({input2:value.toUpperCase()})\r\n    }\r\n\r\n    onInput3Change(value){ \r\n          this.setState({input3:value})\r\n    }\r\n    \r\n\r\n    changeSwitch(){\r\n        this.setState({switch:!this.state.switch})\r\n    }\r\n\r\n    onSubmit = () => {\r\n        let check = 1\r\n        if(this.state.wrong)\r\n          check = this.props.check //0\r\n        this.setState({wrong:false})\r\n        let temp =false\r\n        let str = `${this.state.input1}${this.state.input2}`\r\n        let str1 = `${this.state.input1} ${this.state.input2}`\r\n        let str2 = `${this.state.input1} -${this.state.input2}` \r\n        \r\n        const {no , chapter} = this.state.selectarticle\r\n        temp = (no === str || no === str1 || no === str2) && (chapter === this.state.input3.toString());\r\n\r\n        if(temp){\r\n            this.setState({correct:true, used:this.state.used+check})\r\n            if(check === 1){\r\n                let items = [...this.state.data]\r\n                let item = {...items[this.state.index], times:1}\r\n                items[this.state.index] = item\r\n                this.setState({data: items})\r\n            }\r\n        }else{\r\n            this.setState({wrong:true})\r\n        }\r\n    }\r\n\r\n\r\n\r\n   onNext = () => {\r\n       if(this.state.totalno === this.state.used)\r\n        return this.props.changeState();\r\n       \r\n       let ind = Math.floor(Math.random() * this.state.totalno)\r\n       let temp = this.state.data[ind]\r\n       if(temp.times !== 0)\r\n          this.onNext()\r\n       else{\r\n          this.setState({\r\n            selectarticle:temp,\r\n            index: ind,\r\n            input1:\"\",\r\n            input2:\"\",\r\n            input3:0,\r\n            correct:false,\r\n            wrong:false,\r\n           })\r\n       }   \r\n   }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"flex flex-column mt-5 pt-5\">\r\n             <h1 className=\"mb-4\">Articles</h1>\r\n             <h5 className=\"mb-5\" onClick={()=> this.changeSwitch()} hidden={this.state.switch}>rest No of Articles </h5>\r\n             <h5 className=\"mb-5\" onClick={()=> this.changeSwitch()} hidden={!this.state.switch}>{`${this.state.used}/${this.state.totalno}`}</h5>  \r\n                <h3 className=\"mb-5\">{this.state.selectarticle.article}</h3>\r\n                <div hidden={this.state.selectarticle.chapter === \"0\"}>\r\n                    Chapter:\r\n                    <input \r\n                           type='Number' value={this.state.input3}\r\n                           min='0' className=\"mb-3 ml-1\"\r\n                           style={{width: 50}}\r\n                           onChange={e => this.onInput3Change(e.target.value)}\r\n                        />\r\n                </div>\r\n                <div>\r\n                    Article: <input \r\n                           type='Number' value={this.state.input1}\r\n                           min='0' max='395'\r\n                           style={{width: 50}}\r\n                           onChange={e => this.onInput1Change(e.target.value)}\r\n                        />\r\n                    - <input \r\n                           type='Text' \r\n                           value={this.state.input2}\r\n                           style={{width: 50}} \r\n                           onChange={e => this.onInput2Change(e.target.value)}\r\n                        />\r\n                </div>          \r\n            { !this.state.correct \r\n                ? <button onClick={e => this.onSubmit()} className=\"btn btn-primary mt-4\">Submit</button>\r\n                : <button onClick={e => this.onNext()} className=\"btn btn-primary mt-4\">Next</button> \r\n            }\r\n            <p className=\"mt-2\" hidden={!this.state.wrong} style={{color : 'red'}}>\r\n               {`Correct Ans is Article No. ${this.state.selectarticle.no}`}\r\n            </p> \r\n            <p className=\"mt-2\" hidden={!this.state.wrong || this.state.selectarticle.chapter === \"0\"} style={{color : 'red'}}>\r\n               {`Of chapter ${this.state.selectarticle.chapter}`}\r\n            </p>   \r\n            <p className=\"mt-2\" hidden={!this.state.correct} style={{color : 'green'}}>Correct Value</p>    \r\n        \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashBoard;","import React, { Component } from 'react';\r\nimport SelectRange  from \"./SelectRange\";\r\nimport DashBoard  from \"./DashBoard\";\r\n\r\nclass Home extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            change: 1,\r\n            min:1,\r\n            max:1,\r\n            check:1\r\n        };\r\n    }\r\n    \r\n    SelectRange = (mi, ma, che) => {\r\n        this.setState({min: mi, max:ma, change:2, check:che})\r\n    }\r\n\r\n    changeState = () => {\r\n        this.setState({change:1})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <div>\r\n           { this.state.change === 1 ? <SelectRange min={this.state.min} max={this.state.max} submit={this.SelectRange} />\r\n           : <DashBoard min={this.state.min} max={this.state.max} changeState={this.changeState} check={this.state.check}/>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}